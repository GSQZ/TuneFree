name: Build/release

on: push

jobs:
  BuildLinux:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: setup environment
        run: npm install pnpm -g
      - name: install libs
        run: pnpm install
  
      - name: build linux x64
        run: pnpm build:linux
        env: 
          GH_TOKEN: ${{ secrets.github_token }}
      - name: reg linux x64 builds
        run: AMD64APPIMAGE=$(find dist -name '*-x64.AppImage') &&
             AMD64RPM=$(find dist -name '*-x64.rpm') &&
             AMD64DEB=$(find dist -name '*-x64.deb') &&
             AMD64TARBALL=$(find dist -name '*-x64.tar.gz') &&
             NAME_AMD64APPIMAGE=$(basename '${AMD64APPIMAGE}') &&
             NAME_AMD64RPM=$(basename '${AMD64RPM}') &&
             NAME_AMD64DEB=$(basename '${AMD64DEB}') &&
             NAME_AMD64TARBALL=$(basename '${AMD64TARBALL}') &&
             echo "AMD64APPIMAGE=${AMD64APPIMAGE}" >> $GITHUB_ENV &&
             echo "NAME_AMD64APPIMAGE=${NAME_AMD64APPIMAGE}" >> $GITHUB_ENV &&
             echo "AMD64RPM=${{AMD64RPM}}" >> $GITHUB_ENV &&
             echo "NAME_AMD64RPM=${NAME_AMD64RPM}" >> $GITHUB_ENV &&
             echo "AMD64DEB=${AMD64DEB}" >> $GITHUB_ENV &&
             echo "NAME_AMD64DEB=${NAME_AMD64DEB}" >> $GITHUB_ENV &&
             echo "AMD64TARBALL=${AMD64TARBALL}" >> $GITHUB_ENV &&
             echo "NAME_AMD64TARBALL=${NAME_AMD64TARBALL}" >> $GITHUB_ENV
      - name: build linux arm64
        run: pnpm build:linux-arm64
        env: 
          GH_TOKEN: ${{ secrets.github_token }}
      - name: reg linux arm64 builds
        run: ARM64APPIMAGE=$(find dist -name '*-arm64.AppImage') &&
             ARM64RPM=$(find dist -name '*-arm64.rpm') &&
             ARM64DEB=$(find dist -name '*-arm64.deb') &&
             ARM64TARBALL=$(find dist -name '*-arm64.tar.gz') &&
             NAME_ARM64APPIMAGE=$(basename '${ARM64APPIMAGE}') &&
             NAME_ARM64RPM=$(basename '${ARM64RPM}') &&
             NAME_ARM64DEB=$(basename '${ARM64DEB}') &&
             NAME_ARM64TARBALL=$(basename '${ARM64TARBALL}') &&
             echo "ARM64APPIMAGE=${ARM64APPIMAGE}" >> $GITHUB_ENV &&
             echo "NAME_ARM64APPIMAGE=${NAME_ARM64APPIMAGE}" >> $GITHUB_ENV &&
             echo "ARM64RPM=${ARM64RPM}" >> $GITHUB_ENV &&
             echo "NAME_ARM64RPM=${NAME_ARM64RPM}" >> $GITHUB_ENV &&
             echo "ARM64DEB=${ARM64DEB}" >> $GITHUB_ENV &&
             echo "NAME_ARM64DEB=${NAME_ARM64DEB}" >> $GITHUB_ENV &&
             echo "ARM64TARBALL=${ARM64TARBALL}" >> $GITHUB_ENV &&
             echo "NAME_ARM64TARBALL=${NAME_ARM64TARBALL}" >> $GITHUB_ENV
             
             
        
      - name: Upload AMD64 APPIMAGE RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_AMD64APPIMAGE }}"
          path: "${{ env.AMD64APPIMAGE }}"
      - name: Upload AMD64 RPM RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_AMD64RPM }}"
          path: "${{ env.AMD64RPM }}"
      - name: Upload AMD64 DEB RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_AMD64DEB }}"
          path: "${{ env.AMD64DEB }}"
      - name: Upload AMD64 TARBALL RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_AMD64TARBALL }}"
          path: "${{ env.AMD64TARBALL }}"
        
      - name: Upload ARM64 APPIMAGE RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_ARM64APPIMAGE }}"
          path: "${{ env.ARM64APPIMAGE }}"
      - name: Upload ARM64 RPM RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_ARM64RPM }}"
          path: "${{ env.ARM64RPM }}"
      - name: Upload ARM64 DEB RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_ARM64DEB }}"
          path: "${{ env.ARM64DEB }}"
      - name: Upload ARM64 TARBALL RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_ARM64TARBALL }}"
          path: "${{ env.ARM64TARBALL }}"

  BuildWindows:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: setup environment
        run: npm install pnpm -g && 
             sudo apt-get install wine winetricks &&
             sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install wine32:i386
      
      - name: setup wine
        run: rm -rf ~/.wine &&
             mkdir ~/.wine &&
             mkdir ~/.wine/prefix &&
             export WINEPREFIX=~/.wine/prefix &&
             export WINEARCH=win32 &&
             export WINEPATH=~/.wine &&
             wineboot --init &&
             winetricks 
      - name: install libs
        run: pnpm install
  
      - name: build windows x64
        run: pnpm build:win
        env: 
          GH_TOKEN: ${{ secrets.github_token }}
      - name: reg windows x64 builds
        run: AMD64EXE=$(find dist -name '*-x64-*.exe') &&
             NAME_AMD64EXE=$(basename '${AMD64EXE}') &&
             echo "AMD64EXE=${AMD64EXE}" >> $GITHUB_ENV &&
             echo "NAME_AMD64EXE=${NAME_AMD64EXE}" >> $GITHUB_ENV
      - name: build windows arm64
        run: pnpm build:win-arm64
        env: 
          GH_TOKEN: ${{ secrets.github_token }}
      - name: reg windows arm64 builds
        run: ARM64EXE=$(find dist -name '*-arm64-*.exe') &&
             NAME_ARM64EXE=$(basename '${ARM64EXE}') &&
             echo "ARM64EXE=${ARM64EXE}" >> $GITHUB_ENV &&
             echo "NAME_ARM64EXE=${NAME_ARM64EXE}" >> $GITHUB_ENV
             
             
        
      - name: Upload AMD64 EXE RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_AMD64EXE }}"
          path: "${{ env.AMD64EXE }}"

      - name: Upload ARM64 EXE RELEASE
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.NAME_ARM64EXE }}"
          path: "${{ env.ARM64EXE }}"
